generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  GUEST
  MOD
  ADMIN
}

enum RoomStatus {
  WAITING
  STARTED
  ENDED
}

model User {
  id        String    @id @default(cuid())
  email     String?   @unique
  name      String?
  pseudo    String?
  password  String?
  role      Role      @default(GUEST)
  createdAt DateTime  @default(now())

  questions Question[]
  rooms     Room[]        @relation("HostRooms")
  roomPlayers RoomPlayer[]
}

model Category {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())

  questions Question[]
}

model Question {
  id          String    @id @default(cuid())
  text        String
  imageUrl    String?
  answer      String
  createdAt   DateTime  @default(now())

  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])

  authorId    String?
  author      User?    @relation(fields: [authorId], references: [id])
}

model Room {
  id          String    @id @default(cuid())
  code        String    @unique
  name        String
  status      RoomStatus @default(WAITING)
  isPrivate   Boolean   @default(false)
  password    String?   // hashé si room privée
  maxPlayers  Int       @default(10)
  params      Json
  createdAt   DateTime  @default(now())

  hostId      String
  host        User      @relation("HostRooms", fields: [hostId], references: [id])

  players     RoomPlayer[]
}



model RoomPlayer {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  roomId    String
  room      Room     @relation(fields: [roomId], references: [id])

  pseudo    String
  score     Int      @default(0)
  joinedAt  DateTime @default(now())

  @@unique([userId, roomId])
}
